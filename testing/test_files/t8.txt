CREATE OR REPLACE PACKAGE BODY INGREDIENT_PKG AS
  PROCEDURE NEW( PNAME IN INGREDIENT.NAME%TYPE
                         , PBRAND IN INGREDIENT.BRAND%TYPE
                         , PCATG IN INGREDIENT.CATEGORY%TYPE
                         , PSERV_SIZE IN INGREDIENT.SERVING_SIZE%TYPE
                         , PSERV_UNIT IN INGREDIENT.SERVING_UNIT%TYPE
                         , PALT_SERV_SIZE IN INGREDIENT.ALT_SERVING_SIZE%TYPE
                         , PALT_SERV_UNIT IN INGREDIENT.ALT_SERVING_UNIT%TYPE
                         , PCAL IN INGREDIENT.CALORIES%TYPE
                         , PFAT IN INGREDIENT.FAT%TYPE
                         , PCARB IN INGREDIENT.CARBS%TYPE
                         , PPROT IN INGREDIENT.PROTEIN%TYPE
                         , PID IN INGREDIENT.ID%TYPE DEFAULT SEQ_INGREDIENT_ID.NEXTVAL
                         )
  IS
  BEGIN
    INSERT INTO INGREDIENT(ID, NAME, BRAND, CATEGORY, SERVING_UNIT, SERVING_SIZE, ALT_SERVING_UNIT, ALT_SERVING_SIZE, CALORIES, FAT, CARBS, PROTEIN)
    VALUES(PID, PNAME, PBRAND, PCATG, PSERV_UNIT, PSERV_SIZE, PALT_SERV_UNIT, PALT_SERV_SIZE, PCAL, PFAT, PCARB, PPROT);
    COMMIT;
    
    EXCEPTION
      WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
  END NEW;
  
  PROCEDURE GET(PCURSOR OUT SYS_REFCURSOR)
  IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT *
      FROM INGREDIENT
      ORDER BY ID;
  END GET;
  
  PROCEDURE GET(PID IN INGREDIENT.ID%TYPE, PCURSOR OUT SYS_REFCURSOR)
  IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT *
      FROM INGREDIENT
      WHERE ID=PID;
  END GET;
  
  PROCEDURE GET(PNAME IN INGREDIENT.NAME%TYPE, PCURSOR OUT SYS_REFCURSOR)
  IS
  BEGIN
    OPEN PCURSOR FOR
      SELECT *
      FROM INGREDIENT
      WHERE NAME=PNAME;
  END GET;
  
  PROCEDURE FILTER( PCATEGORY IN VARCHAR2
                  , PBRAND IN VARCHAR2
                  , PCURSOR OUT SYS_REFCURSOR
                  )
  IS
  BEGIN
    IF UPPER(PCATEGORY) != 'ALL' AND UPPER(PBRAND) != 'ALL' THEN
      OPEN PCURSOR FOR
        SELECT * FROM INGREDIENT WHERE UPPER(CATEGORY)=UPPER(PCATEGORY) AND UPPER(BRAND)=UPPER(PBRAND);
    ELSIF UPPER(PCATEGORY) != 'ALL' THEN
      OPEN PCURSOR FOR
        SELECT * FROM INGREDIENT WHERE UPPER(CATEGORY)=UPPER(PCATEGORY);
    ELSIF UPPER(PBRAND) != 'ALL' THEN
      OPEN PCURSOR FOR
        SELECT * FROM INGREDIENT WHERE UPPER(BRAND)=UPPER(PBRAND);
    ELSE
      OPEN PCURSOR FOR
        SELECT * FROM INGREDIENT;
    END IF;
  END FILTER;
  
END INGREDIENT_PKG;